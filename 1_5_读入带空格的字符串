/*************************************************************************
	> define _CRT_SECURE_NO_WARNINGS这行代码是一个预处理指令，用于在编译前告诉编译器禁用与不安全函数相关的警告。
	> 在Visual Studio中，某些函数（如scanf）被认为是不安全的，建议使用更安全的版本（如scanf_s）。
	> 通过定义_CRT_SECURE_NO_WARNINGS，我们可以避免这些警告。

	示例运行步骤：
	1. 初始化 t 数组中的每个元素为 -1。
    2. 输入一个字符串（如 "hello"）并存储在 t 中。打印 t 中每个字符的整数值（ASCII码）。
    3. 初始化 s 数组为 "hello world" 并打印。
    4. 输入一个新字符串（如 "world"）并覆盖 s 数组的内容。打印新的 s 内容。
    5. getchar 读取并丢弃换行符。
    6. 输入一个只包含字母的字符串（如 "world"）并存储在 s 中。打印 s 的内容。
 ************************************************************************/

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>

int main() {
    char t[10]; //声明一个字符数组 t,用于存储字符串，字符串长度可达到10字符（若超过会导致数组溢出）
    // 接下来使用 for 循环将数组 t 的每个t[i] 元素对应的ASCII码值初始化为 -1
    for (int i = 0; i < 10; i++) t[i] = -1; // 从 i = 0 开始，每次循环 i 增加1，直到 i < 10 条件为假时结束。
    scanf("%s", t); // %s 格式说明符会读取输入直到遇到空白字符（空格、回车等）。
    // 接下来使用 for 循环打印数组 t 中每个元素的整数值
    for (int i = 0; i < 10; i++) {
        printf("%d ", t[i]); // %d 格式说明符用于打印整数值，t[i] 会打印字符 t[i] 对应的ASCII码值。
    }
    printf("\n");
    char s[100] = "hello world"; // 声明并初始化一个字符数组 s，数组可达100字符，初始值为 "hello world"。
    printf("%s\n", s); // printf 函数使用 %s 格式说明符输出字符串 s 的内容，此处输出s的初始值
    scanf("%s", s); // scanf 函数再次用于从标准输入读取字符串，并将其存储在数组 s 中。（s的初始值将会被新的输入所覆盖）
    printf("scanf s : %s\n", s);
    // 下方 getchar 函数用于读取单个字符并处理输入缓冲区。
    getchar(); // 这行代码的目的是读取并丢弃之前 scanf 操作后剩余的空白字符（空格、回车，换行等）。
    scanf("%[a-zA-Z]", s); // 读取一串字符，并将其存储在数组 s 中。%[a-zA-Z] 格式说明符表示匹配所有小写和大写字母字符。
    printf("%%[a-zA-Z] : %s\n", s); // printf 函数输出读取到的字符串 s。
    return 0;
}
